# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `minitest-rg` gem.
# Please instead update this file by running `bin/tapioca gem minitest-rg`.

# source://minitest-rg//lib/minitest/rg_plugin.rb#5
module Minitest
  class << self
    # source://minitest/5.22.2/lib/minitest.rb#197
    def __run(reporter, options); end

    # source://minitest/5.22.2/lib/minitest.rb#97
    def after_run(&block); end

    # source://minitest/5.22.2/lib/minitest.rb#19
    def allow_fork; end

    # source://minitest/5.22.2/lib/minitest.rb#19
    def allow_fork=(_arg0); end

    # source://minitest/5.22.2/lib/minitest.rb#69
    def autorun; end

    # source://minitest/5.22.2/lib/minitest.rb#19
    def backtrace_filter; end

    # source://minitest/5.22.2/lib/minitest.rb#19
    def backtrace_filter=(_arg0); end

    # source://minitest/5.22.2/lib/minitest.rb#18
    def cattr_accessor(name); end

    # source://minitest/5.22.2/lib/minitest.rb#1146
    def clock_time; end

    # source://minitest/5.22.2/lib/minitest.rb#177
    def empty_run!(options); end

    # source://minitest/5.22.2/lib/minitest.rb#19
    def extensions; end

    # source://minitest/5.22.2/lib/minitest.rb#19
    def extensions=(_arg0); end

    # source://minitest/5.22.2/lib/minitest.rb#292
    def filter_backtrace(bt); end

    # source://minitest/5.22.2/lib/minitest.rb#19
    def info_signal; end

    # source://minitest/5.22.2/lib/minitest.rb#19
    def info_signal=(_arg0); end

    # source://minitest/5.22.2/lib/minitest.rb#101
    def init_plugins(options); end

    # source://minitest/5.22.2/lib/minitest.rb#108
    def load_plugins; end

    # source://minitest/5.22.2/lib/minitest.rb#19
    def parallel_executor; end

    # source://minitest/5.22.2/lib/minitest.rb#19
    def parallel_executor=(_arg0); end

    # source://minitest/5.22.2/lib/minitest/pride_plugin.rb#10
    def plugin_pride_init(options); end

    # source://minitest/5.22.2/lib/minitest/pride_plugin.rb#4
    def plugin_pride_options(opts, _options); end

    # source://minitest-rg//lib/minitest/rg_plugin.rb#12
    def plugin_rg_init(options); end

    # source://minitest-rg//lib/minitest/rg_plugin.rb#6
    def plugin_rg_options(opts, _options); end

    # source://minitest/5.22.2/lib/minitest.rb#210
    def process_args(args = T.unsafe(nil)); end

    # source://minitest/5.22.2/lib/minitest.rb#19
    def reporter; end

    # source://minitest/5.22.2/lib/minitest.rb#19
    def reporter=(_arg0); end

    # source://minitest/5.22.2/lib/minitest.rb#143
    def run(args = T.unsafe(nil)); end

    # source://minitest/5.22.2/lib/minitest.rb#1137
    def run_one_method(klass, method_name); end

    # source://minitest/5.22.2/lib/minitest.rb#19
    def seed; end

    # source://minitest/5.22.2/lib/minitest.rb#19
    def seed=(_arg0); end
  end
end

# source://minitest-rg//lib/minitest/rg_plugin.rb#20
class Minitest::RG
  # @return [RG] a new instance of RG
  #
  # source://minitest-rg//lib/minitest/rg_plugin.rb#40
  def initialize(io, colors = T.unsafe(nil)); end

  # Returns the value of attribute colors.
  #
  # source://minitest-rg//lib/minitest/rg_plugin.rb#30
  def colors; end

  # Returns the value of attribute io.
  #
  # source://minitest-rg//lib/minitest/rg_plugin.rb#30
  def io; end

  # source://minitest-rg//lib/minitest/rg_plugin.rb#63
  def method_missing(msg, *args); end

  # source://minitest-rg//lib/minitest/rg_plugin.rb#45
  def print(output); end

  # source://minitest-rg//lib/minitest/rg_plugin.rb#49
  def puts(output = T.unsafe(nil)); end

  private

  # @return [Boolean]
  #
  # source://minitest-rg//lib/minitest/rg_plugin.rb#69
  def respond_to_missing?(method_name, include_all = T.unsafe(nil)); end

  class << self
    # source://minitest-rg//lib/minitest/rg_plugin.rb#32
    def rg!(color: T.unsafe(nil)); end

    # @return [Boolean]
    #
    # source://minitest-rg//lib/minitest/rg_plugin.rb#36
    def rg?; end
  end
end

# source://minitest-rg//lib/minitest/rg_plugin.rb#23
Minitest::RG::COLORS = T.let(T.unsafe(nil), Hash)

# source://minitest-rg//lib/minitest/rg_plugin.rb#21
Minitest::RG::VERSION = T.let(T.unsafe(nil), String)

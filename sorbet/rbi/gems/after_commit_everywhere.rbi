# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/after_commit_everywhere/all/after_commit_everywhere.rbi
#
# after_commit_everywhere-1.4.0

module AfterCommitEverywhere
  def after_commit(*, **, &); end
  def after_rollback(*, **, &); end
  def before_commit(*, **, &); end
  def in_transaction(*, **, &); end
  def in_transaction?(*, **, &); end
  def self.after_commit(prepend: nil, connection: nil, without_tx: nil, &callback); end
  def self.after_rollback(prepend: nil, connection: nil, &callback); end
  def self.before_commit(prepend: nil, connection: nil, without_tx: nil, &callback); end
  def self.default_connection; end
  def self.in_transaction(connection = nil, requires_new: nil, **new_tx_options); end
  def self.in_transaction?(connection = nil); end
  def self.register_callback(prepend:, name:, without_tx:, callback:, connection: nil); end
end
class AfterCommitEverywhere::Wrap
  def add_to_transaction(*); end
  def before_committed!(*); end
  def committed!(*); end
  def has_transactional_callbacks?; end
  def initialize(connection: nil, **handlers); end
  def rolledback!(*); end
  def trigger_transactional_callbacks?; end
end
class AfterCommitEverywhere::NotInTransaction < RuntimeError
end
